import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from aiogram.dispatcher.filters import Text

API_TOKEN = '8138203975:AAE-q7SaDll1TOuFfB-inw3VsEjSowFlASM'
ADMIN_ID = 5410641725

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# --- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add("üõç –ö–∞—Ç–∞–ª–æ–≥", "üì¶ –ö–æ—Ä–∑–∏–Ω–∞")
main_kb.add("üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞", "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")

catalog_kb = InlineKeyboardMarkup(row_width=2)
catalog_kb.add(
    InlineKeyboardButton("–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", callback_data="cat_electronics"),
    InlineKeyboardButton("–ö–æ—Å–º–µ—Ç–∏–∫–∞", callback_data="cat_cosmetics"),
    InlineKeyboardButton("–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞", callback_data="cat_home")
)

# --- –¢–æ–≤–∞—Ä—ã ---
products = {
    "cat_electronics": [
        {"name": "–ü–∏—Å—Ç–æ–ª–µ—Ç –º–∞—Å—Å–∞–∂—ë—Ä", "price": 450000},
        {"name": "–ù–∞—É—à–Ω–∏–∫–∏", "price": 150000}
    ],
    "cat_cosmetics": [
        {"name": "–ú–∞—Å–∫–∞ –¥–ª—è –ª–∏—Ü–∞", "price": 35000},
        {"name": "–ú–∏—Ü–µ–ª–ª—è—Ä–Ω–∞—è –≤–æ–¥–∞", "price": 25000}
    ],
    "cat_home": [
        {"name": "–ö–æ–º–æ–¥", "price": 850000},
        {"name": "–≠—Ç–∞–∂–µ—Ä–∫–∞ –¥–ª—è –∫—É—Ö–Ω–∏", "price": 175000}
    ]
}

user_cart = {}

@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    user_cart[message.from_user.id] = []
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FISANOR-market! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_kb)

@dp.message_handler(lambda m: m.text == "üõç –ö–∞—Ç–∞–ª–æ–≥")
async def show_catalog(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=catalog_kb)

@dp.callback_query_handler(lambda c: c.data.startswith('cat_'))
async def show_products(callback: types.CallbackQuery):
    category = callback.data
    items = products.get(category, [])
    for item in items:
        button = InlineKeyboardMarkup()
        button.add(InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_{item['name']}"))
        await bot.send_message(callback.from_user.id, f"üõí {item['name']}: {item['price']} —Å—É–º", reply_markup=button)
    await callback.answer()

@dp.callback_query_handler(lambda c: c.data.startswith('add_'))
async def add_to_cart(callback: types.CallbackQuery):
    item_name = callback.data[4:]
    user_id = callback.from_user.id
    user_cart.setdefault(user_id, []).append(item_name)
    await callback.answer(f"–¢–æ–≤–∞—Ä '{item_name}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")

@dp.message_handler(lambda m: m.text == "üì¶ –ö–æ—Ä–∑–∏–Ω–∞")
async def show_cart(message: types.Message):
    items = user_cart.get(message.from_user.id, [])
    if not items:
        await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")
        return
    cart_text = "\n".join(f"- {item}" for item in items)
    cart_text += "\n\n–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å –∏ –∏–º—è."
    await message.answer(cart_text)

@dp.message_handler(lambda m: m.text == "üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞")
async def delivery_info(message: types.Message):
    await message.answer(
        "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É –¥–æ –¥–æ–º–∞ –∏–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑ –ø–æ –∞–¥—Ä–µ—Å—É: https://maps.app.goo.gl/V3MN6X1xiSPTSVEi6\n"
        "\nüí≥ –û–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É: 4023 0605 0832 1527 (Abduxakimov Xasan Botiro'vich)"
    )

@dp.message_handler(lambda m: m.text == "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support_info(message: types.Message):
    await message.answer(
        "–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:\n"
        "@fisanor_admin (‰∫ó.‰πÇ.‰∏´.Âåö.ÂÖ´.|‚Äì|.‰∫ó)\n@fisanor (Xasan) ‚Äî 24/7 –Ω–∞ —Å–≤—è–∑–∏"
    )

@dp.message_handler()
async def handle_order(message: types.Message):
    items = user_cart.get(message.from_user.id, [])
    if items:
        order_text = f"üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç @{message.from_user.username or '–±–µ–∑ –Ω–∏–∫–∞'} (ID: {message.from_user.id}):\n"
        order_text += "\n".join(f"- {item}" for item in items)
        order_text += f"\n\nüìç –ê–¥—Ä–µ—Å: {message.text}"
        await bot.send_message(ADMIN_ID, order_text)
        await message.answer("‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
        user_cart[message.from_user.id] = []
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞.")

import asyncio

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())